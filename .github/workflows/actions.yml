name: run data_extraction

on:
  schedule:
    - cron: '*/2 * * * *'  # Se ejecuta cada 2 minutos

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository content
        uses: actions/checkout@v2  # Revisa el contenido del repositorio

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Define la versión de Python

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Instala las dependencias del archivo

      - name: Execute Python script
        run: python DataExtraction/main.py  # Ejecuta el script main.py en el directorio DataExtraction

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A  # Añade todos los archivos modificados
          git diff-index --quiet HEAD || git commit -m "Auto-updated by GitHub Action"
          git pull --rebase origin main  # Hacer pull y rebase
          git push origin main  # Empuja los cambios a la rama main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Usa el token secreto de GitHub para la autenticación